import Pagenation from "@/components/Pagenation/Pagenation";
import SinglePost from "@/components/Post/SinglePost";
import Tag from "@/components/Tag/Tag";
import { getAllPosts, getAllTags, getNumberOfPages, getNumberOfPagesByTag, getPostForTopPage, getPostsByPage, getPostsByTagAndPage } from "@/lib/notionAPI";

import Head from "next/head";

export const getStaticPaths = async () => {
  const allTags = await getAllTags();
  let params: any = [];

  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPageByTag: number) => {
        for (let i = 1; i <= numberOfPageByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } })
        }
      })
    })
  )
  // console.log(params);

  return {
    // paths: [
    //   { params: { tag: "blog", page: "1" }},
    //   { params: { tag: "blog", page: "2" }},
    // ],
    paths: params,
    fallback: "blocking",
  }
}

export const getStaticProps = async (context: any) => {
  // const allPosts = await getAllPosts(); 全件取得
  // const fourPosts = await getPostForTopPage(4); 4件取得

  const currentPage: string = context.params?.page.toString();
  const currenTag: string = context.params?.tag.toString();

  const UpperCaseCurrentTag = currenTag.charAt(0).toUpperCase() + currenTag.slice(1);

  const posts = await getPostsByTagAndPage(
    UpperCaseCurrentTag, 
    parseInt(currentPage, 10)
  );
  
    const numberOfPagesByTag = await getNumberOfPagesByTag(UpperCaseCurrentTag);

    const allTags = await getAllTags();

  return {
    props: {
      posts: posts,
      numberOfPagesByTag: numberOfPagesByTag,
      currenTag: currenTag,
      allTags: allTags
    },
    revalidate: 60,
  }
}

const BlogTagPageList = ({ posts, numberOfPagesByTag, currenTag, allTags }: any) =>  {
  // console.log(fourPosts);
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/public/favicon.ico"/>
      </Head>

      <main className="container w-full">
        <Tag tags={allTags}/>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {posts.map((post: any) => (
            <div className="mx-4" key={post.id}>
              <SinglePost
                imege={post.imege}
                title={post.title}
                description={post.description}
                date={post.date}
                slug={post.slug}
                tags={post.tags}
                isPagenationPage={true}
              />
            </div>
          ))} 
        </section>
        <Pagenation 
          numberOfPage={numberOfPagesByTag}
          tag={currenTag}
        />
      </main>
    </div>
  );
}
export default BlogTagPageList;